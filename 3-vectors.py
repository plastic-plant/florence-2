# Stores the contents of text files in a Chroma database together with vectors generated by NoMAD-Attention embeddings function.
# Use the Chroma database to search for content with vector cosin similarity (4-ask.py). Note: Overwrites existing chroma folder.
# 
#    pip3 install chromadb langchain langchain_community
#    python3 3-vectors.py
#    python3 4-ask.py

# Requires Ollama and the nomic-embed-text model. You may want to pull gemma2 as well (for inference in 4-ask.py).
#
#    install https://ollama.com/download  # Runs at localhost:11434
#    ollama pull nomic-embed-text         # Size: 275 MB
#    ollama pull gemma2                   # Size: 5.5 GB | See: https://ollama.com/library

# Output:
#
#    Removing existing chroma database folder.
#    Storing documents with BERT (nomic-embed-text) embeddings in ./chroma/ folder.
#    Documents stored.
#
#    File created: ./chroma/chroma.sqlite3

import os
import shutil
from langchain_core.documents import Document
from langchain_community.embeddings import OllamaEmbeddings
from langchain_community.vectorstores import Chroma

if os.path.exists("chroma"):
    print("Removing existing chroma database folder.")
    shutil.rmtree("chroma")

embeddings = OllamaEmbeddings(model="nomic-embed-text", show_progress=False)
chroma = Chroma(persist_directory="chroma", collection_name="florence_collection", embedding_function=embeddings)
docs = []
for file in os.listdir("texts/"):
    file_path = os.path.join("texts/", file)
    with open(file_path, 'r') as file:
        page_content = file.read()
        docs.append(Document(page_content=page_content))

print("Storing documents with BERT (nomic-embed-text) embeddings in ./chroma/ folder.")
chroma.add_documents(docs)
print("Documents stored.")
